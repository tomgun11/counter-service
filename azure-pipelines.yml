# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#Pipeline will be triggered on master or the commit tag will be test.*
trigger:
  branches:
    include:
    - master
  tags:
    include:
    - test.*

#Currently cannot use free agents due to Microsoft's restriction (Need to request, takes between 3-5 business days)
# pool:
#   name: Azure Pipelines

# Load secured pem file
steps:
- task: DownloadSecureFile@1
  name: caCertificate
  displayName: 'Download pem'
  inputs:
    secureFile: 'devops-exam.pem'

# Install pre-requisits 
- script: |
    ssh -i $(caCertificate.secureFilePath) centos@3.65.42.188 sudo -- "yum install -y yum-utils && sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo && yum install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin" || true
    ssh -i $(caCertificate.secureFilePath) centos@3.65.42.188 sudo -- "systemctl start docker" || true

- script: chmod 400 $(caCertificate.secureFilePath)
  displayName: Build service image

- script: docker build -t counter-app .
  displayName: Build service image

# Copy image to remote host
- script: docker save counter-app | bzip2 | ssh -i $(caCertificate.secureFilePath) centos@3.65.42.188 sudo -- "docker load"
  displayName: Copy image to instance

# Run app
- script: ssh -i $(caCertificate.secureFilePath) centos@3.65.42.188 sudo -- 'docker run -p 80:8080 counter-app'
  displayName: Run app

